<?php

	use Gac\Routing\Exceptions\RouteNotFoundException;
	use Gac\Routing\Routes;
	use PHPUnit\Framework\TestCase;

	class RoutesTest extends TestCase
	{

		/**
		 * @var object|null
		 */
		protected ?object $_object = NULL;

		protected bool $isRouted = false;

		public function setUp(): void {
			parent::setUp(); // TODO: Change the autogenerated stub
			$_SERVER['REQUEST_METHOD'] = "GET";
			$this->isRouted = false;
		}

		/**
		 * @test
		 * @throws RouteNotFoundException
		 * @throws Exception
		 */
		public function routeShouldCallCallbackOnRootPath() {
			$url = "/";
			$method = ["GET"];
			$router = new Routes();
			$self = $this;
			$router->add($url, function () use ($self) {
				$self->isRouted = true;
			}, $method);

			$router->route();
			$this->assertTrue($this->isRouted, "The route is not working");
		}

		/**
		 * @test
		 * @throws RouteNotFoundException
		 * @throws Exception
		 */
		public function routeShouldCallCallbackOnSpecificPath() {
			$url = "/";
			$method = ["GET"];

			$router = new Routes();
			$self = $this;
			$router->add($url, function () use ($self) {
				$self->isRouted = true;
			}, $method);

			$_GET['myUri'] = "/";
			$router->route();
			$this->assertTrue($this->isRouted, "The route is not working");
		}

		public function onRoute() {
			$this->isRouted = true;
		}

		/**
		 * @test
		 */
		public function routeShouldThrowAnNotFoundException() {
			$this->expectException(RouteNotFoundException::class);

			$router = new Routes();
			$router->route();
		}
	}
